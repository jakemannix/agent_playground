[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agent-factory"
version = "0.1.0"
description = "Modal deployment harness for config-driven AI agents using LangGraph and MCP tools"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jake Mannix", email = "jake@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "langgraph>=0.2.0",
    "langchain-anthropic>=0.1.0",
    "langchain-mcp-adapters>=0.1.0",
    "pydantic>=2.0.0",
    "modal>=0.64.0",
    "python-dotenv>=1.0.0",
    "a2a-sdk>=0.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/jakemannix/agent-factory"
Repository = "https://github.com/jakemannix/agent-factory"
Issues = "https://github.com/jakemannix/agent-factory/issues"

[project.scripts]
agent-factory = "agent_factory.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/agent_factory"]

[tool.ruff]
target-version = "py39"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["B011"]

[tool.black]
target-version = ['py39']
line-length = 120
skip-string-normalization = true

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/agent_factory",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/agent_factory"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]